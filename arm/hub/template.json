{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AzureFirewallName": {
            "defaultValue": "crgar-aks-81-fw",
            "type": "String"
        },
        "AzureHubVnetName": {
            "defaultValue": "crgar-aks-81-hub-vnet",
            "type": "String"
        },
        "PublicIpHubName": {
            "defaultValue": "crgar-aks-81-fw-publicip",
            "type": "String"
        },
        "PrivateAksDnsZoneName": {
            "defaultValue": "privatelink.westeurope.azmk8s.io",
            "type": "String"
        },
        "managedClusters_crgar_aks_81_cluster_externalid": {
            "defaultValue": "/subscriptions/930c11b0-5e6d-458f-b9e3-f3dda0734110/resourceGroups/crgar-aks-81-spoke-rg/providers/Microsoft.ContainerService/managedClusters/crgar-aks-81-cluster",
            "type": "String"
        },
        "virtualNetworks_crgar_aks_81_spoke_vnet_externalid": {
            "defaultValue": "/subscriptions/930c11b0-5e6d-458f-b9e3-f3dda0734110/resourceGroups/crgar-aks-81-spoke-rg/providers/Microsoft.Network/virtualNetworks/crgar-aks-81-spoke-vnet",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('PrivateAksDnsZoneName')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 2,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('PublicIpHubName')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "40.118.54.79",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('AzureHubVnetName')]",
            "location": "westeurope",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "10.1.1.4"
                    ]
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "10.1.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "hub-spoke",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[parameters('virtualNetworks_crgar_aks_81_spoke_vnet_externalid')]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('PrivateAksDnsZoneName'), '/crgarcluster-601d59ef')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateAksDnsZoneName'))]"
            ],
            "properties": {
                "metadata": {
                    "own-aks-cluster": "[parameters('managedClusters_crgar_aks_81_cluster_externalid')]",
                    "owned-by": "aksrp"
                },
                "ttl": 300,
                "aRecords": [
                    {
                        "ipv4Address": "10.2.4.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('PrivateAksDnsZoneName'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateAksDnsZoneName'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('PrivateAksDnsZoneName'), '/crgarcluster-601d59ef')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateAksDnsZoneName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[parameters('virtualNetworks_crgar_aks_81_spoke_vnet_externalid')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('AzureHubVnetName'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('AzureHubVnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('AzureHubVnetName'), '/hub-spoke')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('AzureHubVnetName'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[parameters('virtualNetworks_crgar_aks_81_spoke_vnet_externalid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-11-01",
            "name": "[parameters('AzureFirewallName')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIpHubName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('AzureHubVnetName'), 'AzureFirewallSubnet')]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {
                    "Network.DNS.EnableProxy": "True"
                },
                "ipConfigurations": [
                    {
                        "name": "AzureFirewallIpConfiguration0",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIpHubName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('AzureHubVnetName'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "Mandatory-Externals",
                        "properties": {
                            "priority": 1100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "NetworkTimeProtocol",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [
                                        "ntp.ubuntu.com"
                                    ],
                                    "destinationPorts": [
                                        "123"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "Mandatory-Microsoft",
                        "properties": {
                            "priority": 1200,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "MicrosoftFQDN",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "mcr.microsoft.com",
                                        "*.cdn.mscr.io",
                                        "*.data.mcr.microsoft.com",
                                        "management.azure.com",
                                        "login.microsoftonline.com",
                                        "packages.microsoft.com",
                                        "acs-mirror.azureedge.net"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "Optional-External",
                        "properties": {
                            "priority": 1300,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "UbuntuUpdates",
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "security.ubuntu.com",
                                        "azure.archive.ubuntu.com",
                                        "changelogs.ubuntu.com"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "DockerHub",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "auth.docker.io",
                                        "registry-1.docker.io",
                                        "index.docker.io",
                                        "dseasb33srnrn.cloudfront.net",
                                        "production.cloudflare.docker.com"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "Optional-Microsoft",
                        "properties": {
                            "priority": 1400,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "Policies",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "gov-prod-policy-data.trafficmanager.net",
                                        "raw.githubusercontent.com",
                                        "dc.services.visualstudio.com"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Monitoring",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "dc.services.visualstudio.com",
                                        "*.ods.opinsights.azure.com",
                                        "*.oms.opinsights.azure.com",
                                        "*.microsoftonline.com",
                                        "*.monitoring.azure.com"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": []
                                }
                            ]
                        }
                    }
                ],
                "natRuleCollections": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('PrivateAksDnsZoneName'), '/aks-api-link')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('PrivateAksDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('AzureHubVnetName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('AzureHubVnetName'))]"
                }
            }
        }
    ]
}